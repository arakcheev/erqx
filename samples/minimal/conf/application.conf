# This is the main configuration file for the application.
# ~~~~~

application.secret="QGVG?fyttEx@2;Cs;r=jRpbw[N[DIT_pd3@A>83BmR>WlZMy??cBl?K9BR^wxoIF"
application.langs="en"

# The file loader dispatcher is used by the actor that loads files out of git.  All blocking git IO is done on these
# threads.
file-loader-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    core-pool-size-min = 10
    core-pool-size-max = 10
  }
}

# The blog loader dispatcher is used to do fetching and reindexing of the blog when it's updated.  There only needs to
# be one of these threads, all tasks done on this dispatcher are background tasks.
blog-loader-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    core-pool-size-min = 1
    core-pool-size-max = 1
  }
}

# The blogs
blogs {

  # A blog with name default.  The name can be anything, it is only used internally.
  default {

    # The path of the blog.  This should not end in a slash.  This path will be relative to the path that the blogs
    # router is deployed to.
    path = ""

    # The git configuration
    gitConfig {

      # The repo must be a repo on the filesystem that has been cloned from somewhere.
      gitRepo = "."

      # The path within the repo to serve the blog from.  Optional.
      path = "samples/minimal/blog"

      # The branch to read the blog from.  Defaults to published.
      # branch = "published"

      # The name of the remote to fetch from.  If not specified, no fetch will be done when updating.
      # remote = "origin"

      # The fetch key.  Used to authenticate commit hooks from a remote git repository such as GitHub.
      # If not specified, remote triggering of fetching is disabled.
      # fetchKey = "somesecret"

      # The update interval.  If specified, the blog will be fetched (if a remote is configured) and reindexed at this
      # interval.  Reindexing is only done if the blog has actually changed.
      updateInterval = 10 minutes
    }
  }
}